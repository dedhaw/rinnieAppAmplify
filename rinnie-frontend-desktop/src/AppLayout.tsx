import { useState, useEffect } from "react";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
// import { Session } from "@supabase/supabase-js";

import Home from "./views/Home";
import CreateForm from "./views/CreateForm";
import Archive from "./views/Archive";
import Profile from "./views/Profile";
import EmailForm from "./views/EmailForm";
import DisplayForm from "./views/DisplayForm";

import Landing from "./views/LandingPage";
import Login from "./views/Login";
import Signup from "./views/Signup";
import Logout from "./components/HandleLogout";
import GenerateForm from "./views/FillFormPage";
import FormSent from "./views/FormSent";
import Redirect from "./components/LandingRedirect";

import PNF from "./views/PageNotFound";

// import supabase from "./utils/supabase";

// AWS AUTH COGNITO
// Imports the Amplify library from 'aws-amplify' package. This is used to configure your app to interact with AWS services.
import { Amplify } from "aws-amplify";

// Imports the Authenticator and withAuthenticator components from '@aws-amplify/ui-react'.
// Authenticator is a React component that provides a ready-to-use sign-in and sign-up UI.
// withAuthenticator is a higher-order component that wraps your app component to enforce authentication.
import { Authenticator, withAuthenticator } from "@aws-amplify/ui-react";

// Imports the default styles for the Amplify UI components. This line ensures that the authenticator looks nice out of the box.
import "@aws-amplify/ui-react/styles.css";

// Imports the awsExports configuration file generated by the Amplify CLI. This file contains the AWS service configurations (like Cognito, AppSync, etc.) specific to your project.
import awsExports from "./aws-exports";

// Imports the Quiz component from Quiz.js for use in this file.
//import Quiz from './Quiz';

import { fetchAuthSession, signOut } from "@aws-amplify/auth";

// Configures the Amplify library with the settings from aws-exports.js, which includes all the AWS service configurations for this project.
Amplify.configure(awsExports);

function App() {
  const [session, setSession] = useState<any>(null);
  const getIdToken = async (): Promise<void> => {
    try {
      console.log("Before getting session");

      const cognitoSession = await fetchAuthSession();

      console.log("After getting session");

      const idToken = cognitoSession.tokens?.idToken || " ";
      const email = cognitoSession.tokens?.idToken?.payload.email;

      console.log("idToken: ", idToken);
      console.log("idToken to string ", idToken.toString());
      const idTokenString: string = idToken.toString();
      console.log("idToken JWT String: ", idTokenString);
      console.log("idToken email: ", email);
      setSession(email);

      // const response = await fetch('https://c1zbjfmjpk.execute-api.us-east-1.amazonaws.com/qa', {
      //   headers: {
      //     'Content-Type': 'application/json',
      //     Authorization: `Bearer ${idTokenString}`, // Pass the ID token in the Authorization header
      //   }
      // });

      // if (response.ok) {
      //   const data = await response.json();
      //   console.log('API call made');
      //   console.log(data);
      // } else {
      //   console.error("Failed to archive form");
      // }
    } catch (error) {
      console.error("Error getting ID token:", error);
    }
  };

  useEffect(() => {
    getIdToken();
  }, []);

  return (
    <Authenticator>
      <Router>
        <Routes>
          {!session && (
            <>
              <Route path="/" element={<Landing />} />
              <Route path="/landing" element={<Redirect />} />
            </>
          )}

          {session && (
            <>
              <Route path="/" element={<Home session={session} />} />
              <Route
                path="/create-form"
                element={<CreateForm session={session} />}
              />
              <Route path="/archive" element={<Archive session={session} />} />
              <Route path="/profile" element={<Profile session={session} />} />
              <Route
                path="/email-form"
                element={<EmailForm session={session} />}
              />
              <Route path="/form" element={<DisplayForm session={session} />} />
              <Route path="/landing" element={<Landing />} />
            </>
          )}

          <Route path="/login" element={<Login />} />
          <Route path="/signup" element={<Signup />} />
          <Route path="/fill-form" element={<GenerateForm />} />
          <Route path="/form-completed" element={<FormSent />} />

          <Route path="/*" element={<PNF />} />
        </Routes>
      </Router>
    </Authenticator>
  );
}

export default withAuthenticator(App);
